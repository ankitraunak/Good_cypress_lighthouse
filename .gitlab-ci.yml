stages:
  - test
  - performance

Cypress-test-job:
  image: cypress/browsers
  stage: test
  script:
    - npm ci
    - npm install cypress-cucumber-preprocessor --save-dev
    - npm install mochawesome --save-dev
    - npm install --save-dev mochawesome mochawesome-merge mochawesome-report-generator cypress-mochawesome-reporter
    - npx cypress run
    - echo "Inspecting mochawesome-report/.jsons directory:"
    - ls -l mochawesome-report/.jsons/
  artifacts:
    when: always
    paths:
      - mochawesome-report/**
      - cypress/screenshots/**/*.png
      - cypress/videos/**/*.mp4
    expire_in: 12 days

lighthouse-job:
  image: node:18
  stage: performance
  script:
    # Installing Chrome and dependencies
    - apt-get update && apt-get install -y wget gnupg
    - wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | apt-key add -
    - sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
    - apt-get update && apt-get install -y google-chrome-stable
    
    # Installing Lighthouse CI
    - npm install -g @lhci/cli@latest

    # Running Lighthouse with increased wait time and debug options
    - lhci autorun --max-wait-for-load=120000 --chrome-flags="--no-sandbox --disable-dev-shm-usage" || true

    # Moving report to the artifacts directory
    - mkdir -p lighthouse-report
    - mv .lighthouseci/* ./lighthouse-report/

  artifacts:
    paths:
      - lighthouse-report/**  # Include the Lighthouse reports in artifacts
    expire_in: 12 days  # Define expiration time for artifacts

  dependencies:
    - Cypress-test-job  # Ensure this runs after Cypress tests

  # Specify tags or other runner-specific configurations (if needed)
